# =============================================================================
# REDIS CONFIGURATION FOR ELHAIBA BACKEND
# =============================================================================
# This configuration file optimizes Redis for the Elhaiba backend application
# It includes settings for persistence, memory management, and performance
# =============================================================================

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================
# Bind to all interfaces (safe in Docker container)
bind 0.0.0.0

# Default port
port 6379

# TCP listen backlog
tcp-backlog 511

# Close connection after client is idle for N seconds (0 to disable)
timeout 0

# TCP keepalive
tcp-keepalive 300

# =============================================================================
# GENERAL CONFIGURATION
# =============================================================================
# Run as daemon
daemonize no

# Process ID file (not used in Docker)
# pidfile /var/run/redis.pid

# Log level: debug, verbose, notice, warning
loglevel notice

# Log file (empty string for stdout)
logfile ""

# Number of databases
databases 16

# =============================================================================
# PERSISTENCE CONFIGURATION
# =============================================================================
# Save the dataset to disk (format: save <seconds> <changes>)
save 900 1      # Save if at least 1 key changed in 900 seconds (15 minutes)
save 300 10     # Save if at least 10 keys changed in 300 seconds (5 minutes)
save 60 10000   # Save if at least 10000 keys changed in 60 seconds

# Compress RDB files
rdbcompression yes

# Checksum RDB files
rdbchecksum yes

# RDB filename
dbfilename dump.rdb

# Working directory
dir /data

# Enable AOF (Append Only File) persistence
appendonly yes

# AOF filename
appendfilename "appendonly.aof"

# AOF fsync policy: always, everysec, no
appendfsync everysec

# Rewrite AOF when it grows by this percentage
auto-aof-rewrite-percentage 100

# Minimum size for AOF rewrite
auto-aof-rewrite-min-size 64mb

# =============================================================================
# MEMORY MANAGEMENT
# =============================================================================
# Maximum memory usage (256MB for development)
maxmemory 256mb

# Memory eviction policy when max memory is reached
# - allkeys-lru: Remove least recently used keys
# - volatile-lru: Remove least recently used keys with expire set
# - allkeys-lfu: Remove least frequently used keys
# - volatile-lfu: Remove least frequently used keys with expire set
# - allkeys-random: Remove random keys
# - volatile-random: Remove random keys with expire set
# - volatile-ttl: Remove keys with nearest expire time
# - noeviction: Don't evict, return errors
maxmemory-policy allkeys-lru

# Memory sampling for LRU/LFU algorithms (higher = more accurate, more CPU)
maxmemory-samples 5

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
# Hash table resizing (rehashing) settings
# Enable active rehashing
activerehashing yes

# Client query buffer limit
client-query-buffer-limit 1gb

# Client output buffer limits for different client types
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Password protection (enabled for development security)
requirepass 07vk640xz

# ACL (Access Control List) configuration
# ACL users will be loaded from the startup command in docker-compose.yml
# This allows for dynamic user creation with environment variables

# Disable dangerous commands in production
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command KEYS ""
# rename-command CONFIG ""
# rename-command SHUTDOWN ""
# rename-command DEBUG ""
# rename-command EVAL ""

# =============================================================================
# SLOW LOG CONFIGURATION
# =============================================================================
# Log queries slower than this many microseconds
slowlog-log-slower-than 10000

# Maximum length of slow log
slowlog-max-len 128

# =============================================================================
# LATENCY MONITORING
# =============================================================================
# Latency monitoring threshold in milliseconds
latency-monitor-threshold 100

# =============================================================================
# EVENT NOTIFICATION
# =============================================================================
# Keyspace notifications (disabled by default for performance)
# Format: K - keyspace events, E - keyevent events
# A - all events, g - generic commands, $ - string commands
# l - list commands, s - set commands, h - hash commands
# z - sorted set commands, x - expired events, e - evicted events
# t - stream commands
# notify-keyspace-events ""

# Enable keyspace notifications for expired and evicted events (useful for caching)
notify-keyspace-events "Ex"

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================
# Enable protected mode (disable for development with Docker)
protected-mode no

# Stop writing to disk if background save fails
stop-writes-on-bgsave-error yes

# =============================================================================
# CLIENT CONNECTION LIMITS
# =============================================================================
# Maximum number of simultaneous client connections
# maxclients 10000

# =============================================================================
# MODULES AND EXTENSIONS
# =============================================================================
# Load Redis modules (uncomment as needed)
# loadmodule /path/to/module.so

# =============================================================================
# DEVELOPMENT NOTES
# =============================================================================
# This configuration is optimized for development and testing.
# For production use, consider:
#
# 1. Enable password protection (requirepass)
# 2. Disable or rename dangerous commands
# 3. Adjust memory limits based on available RAM
# 4. Enable TLS/SSL if needed
# 5. Configure proper backup strategies
# 6. Monitor slow queries and adjust settings
# 7. Use Redis Sentinel or Cluster for high availability
#
# =============================================================================
